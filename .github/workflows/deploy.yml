name: Deploy to GitHub Pages

on:
  # main 브랜치에 push될 때 자동 배포 (dependabot 제외)
  push:
    branches: ["main"]
    paths-ignore:
      - 'package.json'
      - 'bun.lockb'
      - '.github/dependabot.yml'
  
  # 수동으로도 워크플로우 실행 가능
  workflow_dispatch:

# GitHub Pages 배포를 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 방지 (한 번에 하나의 배포만 실행)
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 빌드 작업
  build:
    runs-on: ubuntu-latest

    
    steps:
      # 저장소 코드를 워크플로우 환경으로 가져오기
      - name: 🛎 Checkout repository
        uses: actions/checkout@v4

        
      # Bun 런타임 설정 (Node.js 대신 Bun 사용으로 성능 향상)
      - name: 🍞 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # Bun 의존성 캐싱으로 빌드 시간 단축
      - name: 💾 Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Next.js 정적 빌드 설정
          static_site_generator: next
          generator_config_file: ./next.config.ts
            
      # 프로젝트 의존성 설치
      - name: 📥 Install dependencies
        run: bun install  
        
      # Next.js 애플리케이션 빌드 (배포 가능 여부 확인)
      - name: 🏗 Build app
        run: bun run build
        env:
          # Notion API 환경변수 (GitHub Secrets에서 설정 필요)
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          # Giscus 댓글 시스템 환경변수 (클라이언트용 NEXT_PUBLIC_ 접두사)
          NEXT_PUBLIC_GISCUS_REPO: ${{ vars.NEXT_PUBLIC_GISCUS_REPO }}
          NEXT_PUBLIC_GISCUS_REPO_ID: ${{ vars.NEXT_PUBLIC_GISCUS_REPO_ID }}
          NEXT_PUBLIC_GISCUS_CATEGORY_ID: ${{ vars.NEXT_PUBLIC_GISCUS_CATEGORY_ID }}
          # Google Analytics (GA4) 환경변수
          NEXT_PUBLIC_GA_ID: ${{ vars.NEXT_PUBLIC_GA_ID }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./out

  # 배포 작업  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
