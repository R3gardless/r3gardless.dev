# Dependabot PR 자동 병합 워크플로우
# Dependabot이 생성한 PR을 특정 조건에 따라 자동으로 병합합니다.
name: Auto-merge Dependabot PRs

# 트리거 조건: PR이 열리거나 업데이트될 때 실행
# pull_request_target을 사용하여 forked repo에서도 안전하게 실행
on:
  pull_request_target:
    types: [opened, synchronize]

# 워크플로우에 필요한 권한 설정
permissions:
  contents: write        # 코드 병합을 위한 권한
  pull-requests: write   # PR 조작을 위한 권한

jobs:
  dependabot:
    runs-on: ubuntu-latest
    # Dependabot이 생성한 PR에서만 실행
    if: github.actor == 'dependabot[bot]'
    steps:
      # Dependabot PR의 메타데이터 수집 (업데이트 타입, 의존성 종류 등)
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      # 패치 업데이트 자동 병합
      # 예: 1.2.3 → 1.2.4 (버그 수정, 보안 패치 등 - 안전함)
      - name: Auto-merge for patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      # 개발 의존성의 마이너 업데이트 자동 병합
      # 예: 개발 도구 업데이트 (1.2.0 → 1.3.0) - 프로덕션에 영향 없음
      - name: Auto-merge for minor updates in dev dependencies
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-minor' &&
          steps.metadata.outputs.dependency-type == 'direct:development'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

# ⚠️ 주의사항:
# 1. 메이저 업데이트(예: 1.x.x → 2.x.x)는 수동 검토 필요 (Breaking Changes 가능성)
# 2. 프로덕션 의존성의 마이너 업데이트도 수동 검토 권장
# 3. Branch protection rules 설정 시 CI 통과 후에만 자동 병합됨
# 4. --auto 플래그로 인해 모든 검사 통과 후 자동 병합됨

# 💡 자동 병합 조건:
# ✅ 패치 업데이트 (x.x.1 → x.x.2): 모든 의존성
# ✅ 마이너 업데이트 (x.1.x → x.2.x): 개발 의존성만
# ❌ 메이저 업데이트 (1.x.x → 2.x.x): 수동 검토
# ❌ 프로덕션 의존성 마이너 업데이트: 수동 검토
